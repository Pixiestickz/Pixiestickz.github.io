*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    list-style: none;

}

//Toggle on and off dark mode
:root{
    //You can do a variable for anything; but we're mostly going to do colors
    --color-primary: #191d2b;
    --color-secondary: #27AE60;
    --color-white: #FFFFFF;
    --color-black: #000;
    --color-gray0: #f8f8f8;
    --color-gray-1: #dbe1e8;
    --color-gray-2: #b2becd;
    --color-gray-3: #6c7983;
    --color-gray-4: #454e56;
    --color-gray-5: #2a2e35;
    --color-gray-6: #12181b;
    --br-sm-2: 14px;

    //Variables for transition delay
    --transition-speed: all .4s ease-in-out;

    //Box shadow
    //0 Pixels on x axis | 3 pixels y axis | 15 pixels for the glare? | opacity at 0.3
    --box-shadow-1: 0 3px 15px rgba(0,0,0,0.3);

}//end root

//Resizing images
img{
    width: 100%;
    height: auto;
}

body{
    //set background color
    background-color: var(--color-primary);

    // Added font family name from google fonts
    font-family: 'Poppins', sans-serif;

    // Set default font size
    font-size: 1.1rem;

    //set default color white; mostly for text
    color: var(--color-white);

    //set transition
    transition: var(--transition-speed);

}//end body

a{
    display: inline-block;
    text-decoration: none;

    //Inherit color from body
    color: inherit;

    //inherit font family from body
    font-family: inherit;
}//end a

header{
    //Set style for all headers
    height: 100vh;
    color: var(--color-white);
    //Hide any color that overflows
    overflow: hidden;

}//end header

section{
    //Set the style for all sections
    min-height: 100vh;
    width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    padding: 3rem 18rem;
}//end section

//Section class
.section {
    //Default, we want these to be off screen; hence -100%
    transform: translateY(-100%) scale(0);
    transition: var(--transition-speed);
    background-color: var(--color-primary);
}

/* FOR LATER:
    GIVE EACH SECTION A DIFFERENT BACKGROUND COLOR EVENTUALLY
*/

//Presets for section 1
.sec1{
    //We want to display nothing at first
    display: none;

    //Once we go back to the default place; it scales all the way back to 1
    //scaling works form 0 to 1
    transform: translateY(0) scale(1);

    //background-color: rgb(93, 217, 193);
}

//Presets for section 2
.sec2{
    //We want to display nothing at first
    display: none;

    //Once we go back to the default place; it scales all the way back to 1
    //scaling works form 0 to 1
    transform: translateY(0) scale(1);

    //background-color: rgb(172, 252, 217);
}

//Presets for section 3
.sec3{
    //We want to display nothing at first
    display: none;

    //Once we go back to the default place; it scales all the way back to 1
    //scaling works form 0 to 1
    transform: translateY(0) scale(1);

    //background-color: rgb(176, 132, 204);
}

//Presets for section 4
.sec4{
    //We want to display nothing at first
    display: none;

    //Once we go back to the default place; it scales all the way back to 1
    //scaling works form 0 to 1
    transform: translateY(0) scale(1);

    //background-color: rgb(102, 86, 135);
}

//Presets for section 5
.sec5{
    //We want to display nothing at first
    display: none;

    //Once we go back to the default place; it scales all the way back to 1
    //scaling works form 0 to 1
    transform: translateY(0) scale(1);
    //background-color: rgb(25, 9, 51);
}

//For displaying sections
.active{
    //only want to display whatever element is active
    display: block;
    animation: scaleAnim 1s ease-in-out;

    @keyframes scaleAnim {
        0%{
            transform: translateY(-100%) scaleY(0);
        }

        100%{
            transform: translateY(0) scaleY(1);
        }
    }
}

//Target the controls
.controls{
    //Parent container
    position: fixed;
    z-index: 10;
    top: 50%;
    right: 3%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    //Center on the y axis
    transform: translateY(-50%);

    //Style active button
    .active-btn{
        //Add a color and transition speed
        background-color: var(--color-secondary) !important;
        transition: var(--transition-speed);

        //change the color of the icon
        i{
            color: var(--color-white) !important;
        }
    }//end active button

    //Target the control class
    .control{
        padding: 1rem;
        cursor: pointer;
        background-color: var(--color-gray-4);
        //Width and height have to be the same if you want to move something rounded
        width: 55px;
        height: 55px;
        border-radius: 50%;

        //Center icons within circles
        display: flex;
        justify-content: center;
        align-items: center;

        //Spacing in between icons
        margin: .7rem 0;
        
        //implement box shadow
        box-shadow: var(--box-shadow-1);

        //sass allows you to nest elements

        //Resize and add color to icon (i)
        i {
            font-size: 1.2rem;
            color: var(--color-gray-2);

            //pointer events reacts to clicks - none for now
            pointer-events: none;
        }

    }//end control
    
}//end controls

//Header-content
.header-content{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    height: 100%;
    
    //Target left header
    .left-header{
        display: flex;
        align-items: center;
        position: relative;

        //Target h-shape
        .h-shape{
            transition: var(--transition-speed);
            width: 65%;
            height: 100%;
            background-color: var(--color-secondary);
            position: absolute;
            left: 0;
            top: 0;
            //We want it to be behind the image, -1 on z layer
            z-index: -1;

            //clip path to alter shape
            //Can just use a clip path generator online for specific shapes and their values
            clip-path: polygon(0 0, 46% 0, 79% 100%, 0% 100%);
        }

        //Target image
        .image{
            border-radius: var(--br-sm-2);
            height: 90%;
            width: 68%;
            margin-left: 4rem;
            background-color: var(--color-black);
            transition: var(--transition-speed);

            //Target image specifically; adding hover gray scaling
            img{
                width: 100%;
                height: 100%;
                //object-fit: cover;
                transition: var(--transition-speed);
                
                //Gray filter based if we're hovering over image
                filter: grayscale(100%);
                &:hover{
                    filter: grayscale(0);
                }
            }
            
        }
    }//end left header

    .right-header{
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding-right: 18rem;

        //Name class
        .name{
            font-size: 3rem;
            
            span{
                color: var(--color-secondary);

            }

            p{
                margin: 1.5rem 0;
                line-height: 2rem;
            }
        }//end name

    }//end right header
}//end header content

/* About */
.about-container{
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    padding-top: 3.5rem;
    padding-bottom: 5rem;

    //Left about
    .left-about{
        padding-right: 5rem;

        p{
            line-height: 2rem;
            padding: 1rem;
            color: var(--color-gray-1);
        }

        h4 {
            font-size: 2rem;
            text-transform: uppercase;
        }
    }//end left about

    
    //Right about
    .right-about{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 2rem;

        //about item
        .about-item{
            border: 1px solid var(--color-gray-5);
            border-radius: 5px;
            transition: var(--transition-speed);
            box-shadow: 1px 2px 15px rgba(0,0,0,0.1);
            
            //Hover
            &:hover{
                cursor: default;
                //Make it move ever so slightly
                transform: translateY(-5px);

                //add border and shadow box
                border: 1px solid var(--color-secondary);
                box-shadow: 1px 4px 15px rgba(0,0,0,0.32);
            }

            //About text
            .abt-text{
                padding: 1.5rem;
                display: flex;
                flex-direction: column;

                //Large text
                .large-text{
                    font-size: 1.5rem;
                    font-weight: 700;
                    color: var(--color-secondary);
                }

                //small text
                .small-text{
                    padding-left: 1rem;
                    position: relative;
                    text-transform: uppercase;
                    font-size: 1.0rem;
                    color: var(--color-gray-1);
                    letter-spacing: 2px;

                    //before
                    &::before{
                        content: '';
                        position: relative;
                        left: 0;
                        top: 15px;
                        width: 2rem;
                        height: 2px;
                        background-color: var(--color-gray-5);
                    }
                }
            }
        }
    }//end right about
}//end container

/*About Stats*/
.about-skills{
    padding-bottom: 4rem;

    .skill-list{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: 2rem;
        
        .skill{
            display: flex;
            flex-direction: column;

            .skill-name{
                text-transform: uppercase;
                font-weight: 500;
                color: var(--color-secondary);
            }

            .skill-detail{
                color: var(--color-gray-2);
            }
        }
    }

}//end about stats

/* Independent components */

//button container 
.btn-con{
    display: flex;
    align-self: flex-start;
}
//main button
.main-btn{
    border-radius: 30px;
    color: inherit;
    //Thick text
    font-weight: 600;
    position: relative;
    border: 1px solid var(--color-secondary);
    display: flex;
    align-self: flex-start;
    align-items: center;
    overflow: hidden;

    //inside the button
    .btn-text{
        padding: 0 2rem;
    }

    .btn-icon{
        background-color: var(--color-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        padding: 1rem;
    
    }//end button icon

    &::before{
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        transform: translateX(100%);
        transition: var(--transition-speed);
        z-index: -1;
    }

    &:hover{
        &::before{
            width: 100%;
            height: 100%;
            background-color: var(--color-secondary);
            //revert after hovering
            transform: translateX(0);
        }
    }

}//end main btn

//Main title
.main-title{
    text-align: center;
    
    //h2
    h2{
        position: relative;
        text-transform: uppercase;
        font-size: 4rem;
        font-weight: 700;

        //span 
        span{
            color: var(--color-secondary);
        }

        .bg-text{
            position: absolute;
            top: 50%;
            left: 50%;
            color: var(--color-gray-5);
            transform: var(--transition-speed);
            z-index: -1;
            transform: translate(-50%, -50%);
            font-weight: 800;
            font-size: 6.3rem;

        }//end bg-text
    }//end h2
}//end main title